'''
   집합형
   1) 문자열
   2) 리스트
      a. 리스트 생성 방법
          (1) [] 직접 사용
          (2) list(집합형)

      b. 리스트 제공 함수
         ==> 함수 정보 확인 방법
            print(dir(list))

      c. 인덱싱 및 슬라이싱
         ==> 문자열과 동일 ( 순방향, 역방향 )

      d. 리스트 특징
         - [] 표현
         - 순서 있고 중복 허용
         - 값 변경 가능 ( mutable )
         
      e. 얕은 복사 및 깊은 복사
       ( 다른 언어에서는 call by value, call by reference)
'''
###################################

# 1. 인덱싱
m = [9,8,7,6,5,4,2,1]
print("1:", m[0])
print("2:", m[3])
print("3:", m[-1])
print("4:", m[-3])
print("---------------")
# 2. 슬라이싱
m = [9,8,7,6,5,4,2,1]
print("5:", m[0:5])  # 실제로는 0~4까지 반환
print("6:", m[3:8])  # 실제로는 3~7까지 반환
print("7:", m[:8])  # 실제로는 0~7까지 반환
print("8:", m[1:])  # 실제로는 01~ 끝까지 반환
print("9:", m[:])  # 0~끝까지, 전체 데이터 반환
print("10:", m[0:8:2])  # 0~7까지, 2 step
#####################################################
# 3. 중첩 리스트
m = [1,2,3, [9,8,7,6,4]]

# 질문1? 7 값을 인데싱해서 출력하시오.
m2 = m[3]
print(m2[2])
print(m[3][2]) # 일반적인 사용방식
# 질문2? 9,8,7,6 값을 슬라이싱해서 출력하시오.
m3 = m[3]
# m3 = [9, 8, 7, 6, 4]
print(m3[0:4])
print(m[3][0:4]) # 일반적인 사용방식

####################################################