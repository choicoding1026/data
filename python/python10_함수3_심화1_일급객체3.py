'''
    일급객체 활용
    가. 함수를 변수에 저장
'''

def fun1():
    print("fun1")  #  fun1 =  함수객체 ====> 호출가능  fun1()

fun1()
# fun1 = 10
# fun1() # 에러발생

# 1. 새로운 변수에 함수 저장
new_fun1 = fun1  #얕은복사인 주소값 복사
new_fun1()


# 2. 임의의 함수호출시 인자값으로 함수 전달 가능 ==> 콜백함수(시스템이 특정시점에 호출하는 함수)
def xxx(f):
    print("xxx")
    f()

xxx(fun1) # 함수를 인자값으로 사용

'''
   콜백함수 ?
   1) 시스템이 특정시점에 호출하는 함수 의미
   2) 구현방법
      - 사용자가 임의의 함수(x)를 호출할 때 인자값으로 
         콜백함수명을 전달한다. 

'''
# 콜백함수 ==> 일급객체
def y():
    print("y콜백함수") # y = 함수객체
def z():
    print("z콜백함수") # z = 함수객체
# 콜백함수

def x(f):
    f()     # x = 함수객체
# 사용자 호출가능한 함수
x(z)
x(y)
# 실예
m2 = ['1','1099','870','84','99', '2']
m2.sort(key=len) # 지정된 함수를 이용해서 정렬
print(m2)
m2.sort(key=int, reverse=True) # 내림차순
print(m2)
print("-------------------------------")

# 3. 임의의 함수 호출시 리턴값으로 함수를 사용할 수 있다.

def kkk():
    return fun1

result = kkk()
result()

